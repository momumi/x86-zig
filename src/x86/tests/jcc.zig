const std = @import("std");
usingnamespace (@import("../machine.zig"));
usingnamespace (@import("../util.zig"));

const imm = Operand.immediate;
const imm16 = Operand.immediate16;
const imm32 = Operand.immediate32;

const immSign = Operand.immediateSigned;
const immSign16 = Operand.immediateSigned16;
const immSign32 = Operand.immediateSigned32;

test "jcc" {
    const m32 = Machine.init(.x86_32);
    const m64 = Machine.init(.x64);

    debugPrint(false);

    {
        testOp1(m32, .JCXZ,   imm(0x11), "67 E3 11");
        testOp1(m32, .JECXZ,  imm(0x11), "E3 11");
        testOp1(m32, .JRCXZ,  imm(0x11), AsmError.InvalidOperand);
        testOp1(m64, .JCXZ,   imm(0x11), AsmError.InvalidOperand);
        testOp1(m64, .JECXZ,  imm(0x11), "67 E3 11");
        testOp1(m64, .JRCXZ,  imm(0x11), "E3 11");
    }

    {
        testOp1(m32, .JA,   imm(0x11), "77 11");
        testOp1(m32, .JAE,  imm(0x11), "73 11");
        testOp1(m32, .JB,   imm(0x11), "72 11");
        testOp1(m32, .JBE,  imm(0x11), "76 11");
        testOp1(m32, .JC,   imm(0x11), "72 11");
        testOp1(m32, .JE,   imm(0x11), "74 11");
        testOp1(m32, .JG,   imm(0x11), "7F 11");
        testOp1(m32, .JGE,  imm(0x11), "7D 11");
        testOp1(m32, .JL,   imm(0x11), "7C 11");
        testOp1(m32, .JLE,  imm(0x11), "7E 11");
        testOp1(m32, .JNA,  imm(0x11), "76 11");
        testOp1(m32, .JNAE, imm(0x11), "72 11");
        testOp1(m32, .JNB,  imm(0x11), "73 11");
        testOp1(m32, .JNBE, imm(0x11), "77 11");
        testOp1(m32, .JNC,  imm(0x11), "73 11");
        testOp1(m32, .JNE,  imm(0x11), "75 11");
        testOp1(m32, .JNG,  imm(0x11), "7E 11");
        testOp1(m32, .JNGE, imm(0x11), "7C 11");
        testOp1(m32, .JNL,  imm(0x11), "7D 11");
        testOp1(m32, .JNLE, imm(0x11), "7F 11");
        testOp1(m32, .JNO,  imm(0x11), "71 11");
        testOp1(m32, .JNP,  imm(0x11), "7B 11");
        testOp1(m32, .JNS,  imm(0x11), "79 11");
        testOp1(m32, .JNZ,  imm(0x11), "75 11");
        testOp1(m32, .JO,   imm(0x11), "70 11");
        testOp1(m32, .JP,   imm(0x11), "7A 11");
        testOp1(m32, .JPE,  imm(0x11), "7A 11");
        testOp1(m32, .JPO,  imm(0x11), "7B 11");
        testOp1(m32, .JS,   imm(0x11), "78 11");
        testOp1(m32, .JZ,   imm(0x11), "74 11");

        testOp1(m64, .JA,   imm(0x11), "77 11");
        testOp1(m64, .JAE,  imm(0x11), "73 11");
        testOp1(m64, .JB,   imm(0x11), "72 11");
        testOp1(m64, .JBE,  imm(0x11), "76 11");
        testOp1(m64, .JC,   imm(0x11), "72 11");
        testOp1(m64, .JE,   imm(0x11), "74 11");
        testOp1(m64, .JG,   imm(0x11), "7F 11");
        testOp1(m64, .JGE,  imm(0x11), "7D 11");
        testOp1(m64, .JL,   imm(0x11), "7C 11");
        testOp1(m64, .JLE,  imm(0x11), "7E 11");
        testOp1(m64, .JNA,  imm(0x11), "76 11");
        testOp1(m64, .JNAE, imm(0x11), "72 11");
        testOp1(m64, .JNB,  imm(0x11), "73 11");
        testOp1(m64, .JNBE, imm(0x11), "77 11");
        testOp1(m64, .JNC,  imm(0x11), "73 11");
        testOp1(m64, .JNE,  imm(0x11), "75 11");
        testOp1(m64, .JNG,  imm(0x11), "7E 11");
        testOp1(m64, .JNGE, imm(0x11), "7C 11");
        testOp1(m64, .JNL,  imm(0x11), "7D 11");
        testOp1(m64, .JNLE, imm(0x11), "7F 11");
        testOp1(m64, .JNO,  imm(0x11), "71 11");
        testOp1(m64, .JNP,  imm(0x11), "7B 11");
        testOp1(m64, .JNS,  imm(0x11), "79 11");
        testOp1(m64, .JNZ,  imm(0x11), "75 11");
        testOp1(m64, .JO,   imm(0x11), "70 11");
        testOp1(m64, .JP,   imm(0x11), "7A 11");
        testOp1(m64, .JPE,  imm(0x11), "7A 11");
        testOp1(m64, .JPO,  imm(0x11), "7B 11");
        testOp1(m64, .JS,   imm(0x11), "78 11");
        testOp1(m64, .JZ,   imm(0x11), "74 11");
    }

    {
        testOp1(m32, .JA,   immSign(-1), "77 ff");
        testOp1(m32, .JAE,  immSign(-1), "73 ff");
        testOp1(m32, .JB,   immSign(-1), "72 ff");
        testOp1(m32, .JBE,  immSign(-1), "76 ff");
        testOp1(m32, .JC,   immSign(-1), "72 ff");
        testOp1(m32, .JE,   immSign(-1), "74 ff");
        testOp1(m32, .JG,   immSign(-1), "7F ff");
        testOp1(m32, .JGE,  immSign(-1), "7D ff");
        testOp1(m32, .JL,   immSign(-1), "7C ff");
        testOp1(m32, .JLE,  immSign(-1), "7E ff");
        testOp1(m32, .JNA,  immSign(-1), "76 ff");
        testOp1(m32, .JNAE, immSign(-1), "72 ff");
        testOp1(m32, .JNB,  immSign(-1), "73 ff");
        testOp1(m32, .JNBE, immSign(-1), "77 ff");
        testOp1(m32, .JNC,  immSign(-1), "73 ff");
        testOp1(m32, .JNE,  immSign(-1), "75 ff");
        testOp1(m32, .JNG,  immSign(-1), "7E ff");
        testOp1(m32, .JNGE, immSign(-1), "7C ff");
        testOp1(m32, .JNL,  immSign(-1), "7D ff");
        testOp1(m32, .JNLE, immSign(-1), "7F ff");
        testOp1(m32, .JNO,  immSign(-1), "71 ff");
        testOp1(m32, .JNP,  immSign(-1), "7B ff");
        testOp1(m32, .JNS,  immSign(-1), "79 ff");
        testOp1(m32, .JNZ,  immSign(-1), "75 ff");
        testOp1(m32, .JO,   immSign(-1), "70 ff");
        testOp1(m32, .JP,   immSign(-1), "7A ff");
        testOp1(m32, .JPE,  immSign(-1), "7A ff");
        testOp1(m32, .JPO,  immSign(-1), "7B ff");
        testOp1(m32, .JS,   immSign(-1), "78 ff");
        testOp1(m32, .JZ,   immSign(-1), "74 ff");

        testOp1(m64, .JA,   immSign(-1), "77 ff");
        testOp1(m64, .JAE,  immSign(-1), "73 ff");
        testOp1(m64, .JB,   immSign(-1), "72 ff");
        testOp1(m64, .JBE,  immSign(-1), "76 ff");
        testOp1(m64, .JC,   immSign(-1), "72 ff");
        testOp1(m64, .JE,   immSign(-1), "74 ff");
        testOp1(m64, .JG,   immSign(-1), "7F ff");
        testOp1(m64, .JGE,  immSign(-1), "7D ff");
        testOp1(m64, .JL,   immSign(-1), "7C ff");
        testOp1(m64, .JLE,  immSign(-1), "7E ff");
        testOp1(m64, .JNA,  immSign(-1), "76 ff");
        testOp1(m64, .JNAE, immSign(-1), "72 ff");
        testOp1(m64, .JNB,  immSign(-1), "73 ff");
        testOp1(m64, .JNBE, immSign(-1), "77 ff");
        testOp1(m64, .JNC,  immSign(-1), "73 ff");
        testOp1(m64, .JNE,  immSign(-1), "75 ff");
        testOp1(m64, .JNG,  immSign(-1), "7E ff");
        testOp1(m64, .JNGE, immSign(-1), "7C ff");
        testOp1(m64, .JNL,  immSign(-1), "7D ff");
        testOp1(m64, .JNLE, immSign(-1), "7F ff");
        testOp1(m64, .JNO,  immSign(-1), "71 ff");
        testOp1(m64, .JNP,  immSign(-1), "7B ff");
        testOp1(m64, .JNS,  immSign(-1), "79 ff");
        testOp1(m64, .JNZ,  immSign(-1), "75 ff");
        testOp1(m64, .JO,   immSign(-1), "70 ff");
        testOp1(m64, .JP,   immSign(-1), "7A ff");
        testOp1(m64, .JPE,  immSign(-1), "7A ff");
        testOp1(m64, .JPO,  immSign(-1), "7B ff");
        testOp1(m64, .JS,   immSign(-1), "78 ff");
        testOp1(m64, .JZ,   immSign(-1), "74 ff");
    }

    {
        testOp1(m32, .JA,   imm(0x80), "66 0F 87 80 00");
        testOp1(m32, .JAE,  imm(0x80), "66 0F 83 80 00");
        testOp1(m32, .JB,   imm(0x80), "66 0F 82 80 00");
        testOp1(m32, .JBE,  imm(0x80), "66 0F 86 80 00");
        testOp1(m32, .JC,   imm(0x80), "66 0F 82 80 00");
        testOp1(m32, .JE,   imm(0x80), "66 0F 84 80 00");
        testOp1(m32, .JG,   imm(0x80), "66 0F 8F 80 00");
        testOp1(m32, .JGE,  imm(0x80), "66 0F 8D 80 00");
        testOp1(m32, .JL,   imm(0x80), "66 0F 8C 80 00");
        testOp1(m32, .JLE,  imm(0x80), "66 0F 8E 80 00");
        testOp1(m32, .JNA,  imm(0x80), "66 0F 86 80 00");
        testOp1(m32, .JNAE, imm(0x80), "66 0F 82 80 00");
        testOp1(m32, .JNB,  imm(0x80), "66 0F 83 80 00");
        testOp1(m32, .JNBE, imm(0x80), "66 0F 87 80 00");
        testOp1(m32, .JNC,  imm(0x80), "66 0F 83 80 00");
        testOp1(m32, .JNE,  imm(0x80), "66 0F 85 80 00");
        testOp1(m32, .JNG,  imm(0x80), "66 0F 8E 80 00");
        testOp1(m32, .JNGE, imm(0x80), "66 0F 8C 80 00");
        testOp1(m32, .JNL,  imm(0x80), "66 0F 8D 80 00");
        testOp1(m32, .JNLE, imm(0x80), "66 0F 8F 80 00");
        testOp1(m32, .JNO,  imm(0x80), "66 0F 81 80 00");
        testOp1(m32, .JNP,  imm(0x80), "66 0F 8B 80 00");
        testOp1(m32, .JNS,  imm(0x80), "66 0F 89 80 00");
        testOp1(m32, .JNZ,  imm(0x80), "66 0F 85 80 00");
        testOp1(m32, .JO,   imm(0x80), "66 0F 80 80 00");
        testOp1(m32, .JP,   imm(0x80), "66 0F 8A 80 00");
        testOp1(m32, .JPE,  imm(0x80), "66 0F 8A 80 00");
        testOp1(m32, .JPO,  imm(0x80), "66 0F 8B 80 00");
        testOp1(m32, .JS,   imm(0x80), "66 0F 88 80 00");
        testOp1(m32, .JZ,   imm(0x80), "66 0F 84 80 00");

        testOp1(m64, .JA,   imm(0x80), "0F 87 80 00 00 00");
        testOp1(m64, .JAE,  imm(0x80), "0F 83 80 00 00 00");
        testOp1(m64, .JB,   imm(0x80), "0F 82 80 00 00 00");
        testOp1(m64, .JBE,  imm(0x80), "0F 86 80 00 00 00");
        testOp1(m64, .JC,   imm(0x80), "0F 82 80 00 00 00");
        testOp1(m64, .JE,   imm(0x80), "0F 84 80 00 00 00");
        testOp1(m64, .JG,   imm(0x80), "0F 8F 80 00 00 00");
        testOp1(m64, .JGE,  imm(0x80), "0F 8D 80 00 00 00");
        testOp1(m64, .JL,   imm(0x80), "0F 8C 80 00 00 00");
        testOp1(m64, .JLE,  imm(0x80), "0F 8E 80 00 00 00");
        testOp1(m64, .JNA,  imm(0x80), "0F 86 80 00 00 00");
        testOp1(m64, .JNAE, imm(0x80), "0F 82 80 00 00 00");
        testOp1(m64, .JNB,  imm(0x80), "0F 83 80 00 00 00");
        testOp1(m64, .JNBE, imm(0x80), "0F 87 80 00 00 00");
        testOp1(m64, .JNC,  imm(0x80), "0F 83 80 00 00 00");
        testOp1(m64, .JNE,  imm(0x80), "0F 85 80 00 00 00");
        testOp1(m64, .JNG,  imm(0x80), "0F 8E 80 00 00 00");
        testOp1(m64, .JNGE, imm(0x80), "0F 8C 80 00 00 00");
        testOp1(m64, .JNL,  imm(0x80), "0F 8D 80 00 00 00");
        testOp1(m64, .JNLE, imm(0x80), "0F 8F 80 00 00 00");
        testOp1(m64, .JNO,  imm(0x80), "0F 81 80 00 00 00");
        testOp1(m64, .JNP,  imm(0x80), "0F 8B 80 00 00 00");
        testOp1(m64, .JNS,  imm(0x80), "0F 89 80 00 00 00");
        testOp1(m64, .JNZ,  imm(0x80), "0F 85 80 00 00 00");
        testOp1(m64, .JO,   imm(0x80), "0F 80 80 00 00 00");
        testOp1(m64, .JP,   imm(0x80), "0F 8A 80 00 00 00");
        testOp1(m64, .JPE,  imm(0x80), "0F 8A 80 00 00 00");
        testOp1(m64, .JPO,  imm(0x80), "0F 8B 80 00 00 00");
        testOp1(m64, .JS,   imm(0x80), "0F 88 80 00 00 00");
        testOp1(m64, .JZ,   imm(0x80), "0F 84 80 00 00 00");
    }

    {
        testOp1(m32, .JA,   imm16(0x80), "66 0F 87 80 00");
        testOp1(m32, .JAE,  imm16(0x80), "66 0F 83 80 00");
        testOp1(m32, .JB,   imm16(0x80), "66 0F 82 80 00");
        testOp1(m32, .JBE,  imm16(0x80), "66 0F 86 80 00");
        testOp1(m32, .JC,   imm16(0x80), "66 0F 82 80 00");
        testOp1(m32, .JE,   imm16(0x80), "66 0F 84 80 00");
        testOp1(m32, .JG,   imm16(0x80), "66 0F 8F 80 00");
        testOp1(m32, .JGE,  imm16(0x80), "66 0F 8D 80 00");
        testOp1(m32, .JL,   imm16(0x80), "66 0F 8C 80 00");
        testOp1(m32, .JLE,  imm16(0x80), "66 0F 8E 80 00");
        testOp1(m32, .JNA,  imm16(0x80), "66 0F 86 80 00");
        testOp1(m32, .JNAE, imm16(0x80), "66 0F 82 80 00");
        testOp1(m32, .JNB,  imm16(0x80), "66 0F 83 80 00");
        testOp1(m32, .JNBE, imm16(0x80), "66 0F 87 80 00");
        testOp1(m32, .JNC,  imm16(0x80), "66 0F 83 80 00");
        testOp1(m32, .JNE,  imm16(0x80), "66 0F 85 80 00");
        testOp1(m32, .JNG,  imm16(0x80), "66 0F 8E 80 00");
        testOp1(m32, .JNGE, imm16(0x80), "66 0F 8C 80 00");
        testOp1(m32, .JNL,  imm16(0x80), "66 0F 8D 80 00");
        testOp1(m32, .JNLE, imm16(0x80), "66 0F 8F 80 00");
        testOp1(m32, .JNO,  imm16(0x80), "66 0F 81 80 00");
        testOp1(m32, .JNP,  imm16(0x80), "66 0F 8B 80 00");
        testOp1(m32, .JNS,  imm16(0x80), "66 0F 89 80 00");
        testOp1(m32, .JNZ,  imm16(0x80), "66 0F 85 80 00");
        testOp1(m32, .JO,   imm16(0x80), "66 0F 80 80 00");
        testOp1(m32, .JP,   imm16(0x80), "66 0F 8A 80 00");
        testOp1(m32, .JPE,  imm16(0x80), "66 0F 8A 80 00");
        testOp1(m32, .JPO,  imm16(0x80), "66 0F 8B 80 00");
        testOp1(m32, .JS,   imm16(0x80), "66 0F 88 80 00");
        testOp1(m32, .JZ,   imm16(0x80), "66 0F 84 80 00");

        testOp1(m64, .JA,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JAE,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JB,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JBE,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JC,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JE,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JG,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JGE,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JL,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JLE,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNA,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNAE, imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNB,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNBE, imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNC,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNE,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNG,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNGE, imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNL,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNLE, imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNO,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNP,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNS,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JNZ,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JO,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JP,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JPE,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JPO,  imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JS,   imm16(0x80), AsmError.InvalidOperand);
        testOp1(m64, .JZ,   imm16(0x80), AsmError.InvalidOperand);
    }

    {
        testOp1(m32, .JA,   immSign32(-1), "0F 87 ff ff ff ff");
        testOp1(m32, .JAE,  immSign32(-1), "0F 83 ff ff ff ff");
        testOp1(m32, .JB,   immSign32(-1), "0F 82 ff ff ff ff");
        testOp1(m32, .JBE,  immSign32(-1), "0F 86 ff ff ff ff");
        testOp1(m32, .JC,   immSign32(-1), "0F 82 ff ff ff ff");
        testOp1(m32, .JE,   immSign32(-1), "0F 84 ff ff ff ff");
        testOp1(m32, .JG,   immSign32(-1), "0F 8F ff ff ff ff");
        testOp1(m32, .JGE,  immSign32(-1), "0F 8D ff ff ff ff");
        testOp1(m32, .JL,   immSign32(-1), "0F 8C ff ff ff ff");
        testOp1(m32, .JLE,  immSign32(-1), "0F 8E ff ff ff ff");
        testOp1(m32, .JNA,  immSign32(-1), "0F 86 ff ff ff ff");
        testOp1(m32, .JNAE, immSign32(-1), "0F 82 ff ff ff ff");
        testOp1(m32, .JNB,  immSign32(-1), "0F 83 ff ff ff ff");
        testOp1(m32, .JNBE, immSign32(-1), "0F 87 ff ff ff ff");
        testOp1(m32, .JNC,  immSign32(-1), "0F 83 ff ff ff ff");
        testOp1(m32, .JNE,  immSign32(-1), "0F 85 ff ff ff ff");
        testOp1(m32, .JNG,  immSign32(-1), "0F 8E ff ff ff ff");
        testOp1(m32, .JNGE, immSign32(-1), "0F 8C ff ff ff ff");
        testOp1(m32, .JNL,  immSign32(-1), "0F 8D ff ff ff ff");
        testOp1(m32, .JNLE, immSign32(-1), "0F 8F ff ff ff ff");
        testOp1(m32, .JNO,  immSign32(-1), "0F 81 ff ff ff ff");
        testOp1(m32, .JNP,  immSign32(-1), "0F 8B ff ff ff ff");
        testOp1(m32, .JNS,  immSign32(-1), "0F 89 ff ff ff ff");
        testOp1(m32, .JNZ,  immSign32(-1), "0F 85 ff ff ff ff");
        testOp1(m32, .JO,   immSign32(-1), "0F 80 ff ff ff ff");
        testOp1(m32, .JP,   immSign32(-1), "0F 8A ff ff ff ff");
        testOp1(m32, .JPE,  immSign32(-1), "0F 8A ff ff ff ff");
        testOp1(m32, .JPO,  immSign32(-1), "0F 8B ff ff ff ff");
        testOp1(m32, .JS,   immSign32(-1), "0F 88 ff ff ff ff");
        testOp1(m32, .JZ,   immSign32(-1), "0F 84 ff ff ff ff");

        testOp1(m64, .JA,   immSign32(-1), "0F 87 ff ff ff ff");
        testOp1(m64, .JAE,  immSign32(-1), "0F 83 ff ff ff ff");
        testOp1(m64, .JB,   immSign32(-1), "0F 82 ff ff ff ff");
        testOp1(m64, .JBE,  immSign32(-1), "0F 86 ff ff ff ff");
        testOp1(m64, .JC,   immSign32(-1), "0F 82 ff ff ff ff");
        testOp1(m64, .JE,   immSign32(-1), "0F 84 ff ff ff ff");
        testOp1(m64, .JG,   immSign32(-1), "0F 8F ff ff ff ff");
        testOp1(m64, .JGE,  immSign32(-1), "0F 8D ff ff ff ff");
        testOp1(m64, .JL,   immSign32(-1), "0F 8C ff ff ff ff");
        testOp1(m64, .JLE,  immSign32(-1), "0F 8E ff ff ff ff");
        testOp1(m64, .JNA,  immSign32(-1), "0F 86 ff ff ff ff");
        testOp1(m64, .JNAE, immSign32(-1), "0F 82 ff ff ff ff");
        testOp1(m64, .JNB,  immSign32(-1), "0F 83 ff ff ff ff");
        testOp1(m64, .JNBE, immSign32(-1), "0F 87 ff ff ff ff");
        testOp1(m64, .JNC,  immSign32(-1), "0F 83 ff ff ff ff");
        testOp1(m64, .JNE,  immSign32(-1), "0F 85 ff ff ff ff");
        testOp1(m64, .JNG,  immSign32(-1), "0F 8E ff ff ff ff");
        testOp1(m64, .JNGE, immSign32(-1), "0F 8C ff ff ff ff");
        testOp1(m64, .JNL,  immSign32(-1), "0F 8D ff ff ff ff");
        testOp1(m64, .JNLE, immSign32(-1), "0F 8F ff ff ff ff");
        testOp1(m64, .JNO,  immSign32(-1), "0F 81 ff ff ff ff");
        testOp1(m64, .JNP,  immSign32(-1), "0F 8B ff ff ff ff");
        testOp1(m64, .JNS,  immSign32(-1), "0F 89 ff ff ff ff");
        testOp1(m64, .JNZ,  immSign32(-1), "0F 85 ff ff ff ff");
        testOp1(m64, .JO,   immSign32(-1), "0F 80 ff ff ff ff");
        testOp1(m64, .JP,   immSign32(-1), "0F 8A ff ff ff ff");
        testOp1(m64, .JPE,  immSign32(-1), "0F 8A ff ff ff ff");
        testOp1(m64, .JPO,  immSign32(-1), "0F 8B ff ff ff ff");
        testOp1(m64, .JS,   immSign32(-1), "0F 88 ff ff ff ff");
        testOp1(m64, .JZ,   immSign32(-1), "0F 84 ff ff ff ff");
    }

}
